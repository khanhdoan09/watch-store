
@{
    Layout = null;
}
@model WatchStore.Models.Product

<!doctype html>
<html lang="en">
<head>
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet"
          integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">

    <title>My Admin</title>
    <link rel="stylesheet" href="~/Content/admin/scss/style.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.1.1/css/all.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/5.1.3/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdn.datatables.net/1.12.1/css/dataTables.bootstrap5.min.css">
</head>
<body>


    <div class="container-fluid py-3">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Edit Product</h5>
            </div>
            @using (Ajax.BeginForm("SaveEditProduct",
"ManageProduct",
new { IdOld = @ViewBag.IdEditProduct },
new AjaxOptions()
{
    HttpMethod = "POST",
    OnSuccess = "OnSuccess",
    OnFailure = "OnFailure"
},
new { enctype = "multipart/form-data" }))
            {
                <div class="modal-body ">
                    <div>
                        <!-- 2 column grid layout with text inputs for the first and last names -->

                        <div class="row mb-5">
                            <div class="col-2">
                                <div class="form-outline">
                                    @Html.LabelFor(model => model.Id)
                                    @Html.TextBoxFor(model => model.Id, new { @class = "form-control", required = "required", @readonly = "readonly" })
                                </div>
                            </div>
                            <div class="col-4">
                                <div class="form-outline">
                                    @Html.LabelFor(model => model.Name)
                                    @Html.TextBoxFor(model => model.Name, new { @class = "form-control", required = "required" })
                                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-2">
                                <div class="form-outline">
                                    @Html.LabelFor(model => model.Price)
                                    @Html.TextBoxFor(model => model.Price, new { @class = "form-control", required = "required" })
                                    @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-2">
                                <div class="form-outline">
                                    @Html.LabelFor(model => model.Discount)
                                    @Html.TextBoxFor(model => model.Discount, new { @class = "form-control", required = "required" })
                                    @Html.ValidationMessageFor(model => model.Discount, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-2">
                                <div class="form-outline">
                                    @Html.LabelFor(model => model.Import)
                                    @Html.TextBoxFor(model => model.Import, new { @class = "form-control", required = "required" })
                                    @Html.ValidationMessageFor(model => model.Import, "", new { @class = "text-danger" })
                                </div>
                            </div>

                        </div>

                        <div class="row mb-5">
                            <div class="col-2">
                                <div class="form-outline">
                                    @Html.LabelFor(model => model.Gender)
                                    @Html.TextBoxFor(model => model.Gender, new { @class = "form-control", required = "required" })
                                    @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-2">
                                <div class="form-outline">
                                    @Html.LabelFor(model => model.Brand)
                                    @Html.TextBoxFor(model => model.Brand, new { @class = "form-control", required = "required" })
                                </div>
                            </div>
                            <div class="col-2">
                                <div class="form-outline">
                                    @Html.LabelFor(model => model.Origin)
                                    @Html.TextBoxFor(model => model.Origin, new { @class = "form-control", required = "required" })
                                    @Html.ValidationMessageFor(model => model.Origin, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-2">
                                <div class="form-outline">
                                    @Html.LabelFor(model => model.WarrantyPeriod)
                                    @Html.TextBoxFor(model => model.WarrantyPeriod, new { @class = "form-control", required = "required" })
                                    @Html.ValidationMessageFor(model => model.WarrantyPeriod, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-2">
                                <div class="form-outline">
                                    @Html.LabelFor(model => model.Diameter)
                                    @Html.TextBoxFor(model => model.Diameter, new { @class = "form-control", required = "required" })
                                    @Html.ValidationMessageFor(model => model.Diameter, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-2">
                                <div class="form-outline">
                                    @Html.LabelFor(model => model.Material)
                                    @Html.TextBoxFor(model => model.Material, new { @class = "form-control", required = "required" })
                                    @Html.ValidationMessageFor(model => model.Material, "", new { @class = "text-danger" })
                                </div>
                            </div>

                        </div>
                        <div class="row mb-5">
                            <div class="col-2">
                                <div class="form-outline">
                                    @Html.LabelFor(model => model.Strap)
                                    @Html.TextBoxFor(model => model.Strap, new { @class = "form-control", required = "required" })
                                    @Html.ValidationMessageFor(model => model.Strap, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-2">
                                <div class="form-outline">
                                    @Html.LabelFor(model => model.WireWidth)
                                    @Html.TextBoxFor(model => model.WireWidth, new { @class = "form-control", required = "required" })
                                    @Html.ValidationMessageFor(model => model.WireWidth, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-2">
                                <div class="form-outline">
                                    @Html.LabelFor(model => model.Apparatus)
                                    @Html.TextBoxFor(model => model.Apparatus, new { @class = "form-control", required = "required" })
                                    @Html.ValidationMessageFor(model => model.Apparatus, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-2">
                                <div class="form-outline">
                                    @Html.LabelFor(model => model.Waterproof)
                                    @Html.TextBoxFor(model => model.Waterproof, new { @class = "form-control", required = "required" })
                                    @Html.ValidationMessageFor(model => model.Waterproof, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-2">
                                <div class="form-outline">
                                    @Html.LabelFor(model => model.CreateDate)
                                    @Html.TextBoxFor(model => model.CreateDate, new { @class = "form-control", required = "required" })
                                    @Html.ValidationMessageFor(model => model.CreateDate, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="row mb-5">
                            <div class="col-3">
                                <div class="form-outline">
                                    <p>Avatar</p>
                                    <input class="img-load" name="image_1" type="file" id="imgLoad_1" data-imgshow="imgShow_1" />
                                    <img id="imgShow_1" src="~/Content/img/product/@Model.Avatar"
                                         class="avatar-product img-thumbnail"
                                         alt="">
                                </div>
                            </div>
                            @{
                                int CountImage = 1;
                                foreach (var Image in Model.Images)
                                {
                                    CountImage += 1;
                                    <div class="col-3">
                                        <div class="form-outline">
                                            <input class="img-load" name="image_@CountImage" type="file" id="imgLoad_@CountImage" data-imgshow="imgShow_@CountImage" />
                                            <img id="imgShow_@CountImage" src="~/Content/img/product/@Image.Url"
                                                 class="avatar-product img-thumbnail"
                                                 alt="">
                                        </div>
                                    </div>
                                }
                            }
                        </div>
                        <div class="form-outline mb-5">
                            @Html.LabelFor(model => model.Description)
                            @Html.TextAreaFor(model => model.Description, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>
                    </div>

                </div><div class="modal-footer">
                    <button type="button" class="btns btns-close">
                        <a href="./index.html">Close</a>
                    </button>
                    <button type="submit" class="btn btn-primary">Edit</button>
                </div>
            }
        </div>
    </div>

    <!--end modal product add-->
    <!--end main-->

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js"
            integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM"
            crossorigin="anonymous"></script>
    <script type="text/javascript" src="https://code.jquery.com/jquery-1.11.0.min.js"></script>
    <script type="text/javascript" src="https://code.jquery.com/jquery-migrate-1.2.1.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.slim.min.js"
            integrity="sha256-u7e5khyithlIdTpu22PHhENmPcRdFiHRjhAuHcs05RI=" crossorigin="anonymous"></script>
    <script type="text/css" src="https://stackpath.bootstrapcdn.com/bootstrap/4.1.1/css/bootstrap.min.css"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.1.1/js/bootstrap.bundle.min.js" />
    <script type="text/javascript"
            src="https://cdnjs.cloudflare.com/ajax/libs/mdb-ui-kit/4.2.0/mdb.min.js"></script>
    <script src="https://cdn.datatables.net/1.12.1/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.12.1/js/dataTables.bootstrap5.min.js"></script>
    <script src="@Url.Content("~/Scripts/jquery.unobtrusive-ajax.min.js")"
            type="text/javascript"></script>
    <!-- co cai nay thi validation chay -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.1/jquery.validate.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validation-unobtrusive/3.2.11/jquery.validate.unobtrusive.min.js"></script>
    <script>
        function OnSuccess(e) {
            alert(e.text)
        }
        function OnFailure(e) {
            alert(e.text)
        }
    </script>

    <script>
        // load image
        $(function () {
            $(".img-load").each(function () {
                $(this).change(function () {
                    let imgShow = $(this).data("imgshow")
                    if (this.files) {
                        var reader = new FileReader();
                        reader.onload = function (e) {
                            $('#' + imgShow).attr('src', e.target.result);
                        }
                        reader.readAsDataURL(this.files[0]);
                    }
                })
            })
        })

    </script>
</body>
</html>